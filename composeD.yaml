services:
  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://postgres-db:5432/sonar_db
      - SONAR_JDBC_USERNAME=sonar_user
      - SONAR_JDBC_PASSWORD=sonar_pass
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - sonar-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/system/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      postgres-db:
        condition: service_healthy

  postgres-db:
    image: postgres:15
    container_name: postgres-db
    networks:
      - sonar-net
    environment:
      - POSTGRES_DB=sonar_db
      - POSTGRES_USER=sonar_user
      - POSTGRES_PASSWORD=sonar_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar_user -d sonar_db"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  sonar-net:
    driver: bridge

volumes:
  postgres_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
